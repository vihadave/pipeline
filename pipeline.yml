# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: 
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'arm-demo'
              backendAzureRmResourceGroupName: 'rg_Training'
              backendAzureRmStorageAccountName: 'stforautomationbackend'
              backendAzureRmContainerName: 'tfstatedata'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV3@3
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  
  - stage: approve
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    displayName: Approve
    jobs:
      - job: approve
        displayName: Wait for approval
        pool: server
        steps: 
          - task: ManualValidation@0
            timeoutInMinutes: 10
            inputs:
              notifyUsers: 'viha.dave@anblicks.com'
              instructions: 'Review the plan in the next hour'
  
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'arm-demo'
              backendAzureRmResourceGroupName: 'rg_Training'
              backendAzureRmStorageAccountName: 'stforautomationbackend'
              backendAzureRmContainerName: 'tfstatedata'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV3@3
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'arm-demo'
          - task: TerraformTaskV3@3
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'arm-demo'
